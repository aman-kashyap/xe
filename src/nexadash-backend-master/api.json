{
    "swagger": "2.0",
    "info": {
        "description": "NexaStack Dashboard's Backend\n",
        "version": "0.1",
        "title": "NexaDash-Backend",
        "contact": {
            "name": "Gursimran Singh <gursimran@xenonstack.com>"
        },
        "license": {
            "name": "Propriety"
        }
    },
    "host": "api.nexastack.com",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/projects": {
            "get": {
                "description": "Returns all projects from the database that the user has access to",
                "operationId": "findProjects",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "tags to filter by",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project"
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new project in the database.  Duplicates are not allowed per user",
                "operationId": "addProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "body",
                        "description": "Project to add to the DB",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "project response",
                        "schema": {
                            "$ref": "#/definitions/project"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Returns a project based on a single ID",
                "operationId": "findProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/project"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single project based on the ID supplied",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of project to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet deleted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "project": {
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "newProject": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "node": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "objectId"
                },
                "name": {
                    "type": "string"
                },
                "cluster": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                },
                "project": {
                    "type": "integer"
                }
            }
        },
        "credentials": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "project": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ssh_user_name": {
                    "type": "string"
                },
                "ssh_pass": {
                    "type": "string"
                },
                "sudo": {
                    "type": "boolean"
                }
            }
        },
        "cluster": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "errorModel": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}